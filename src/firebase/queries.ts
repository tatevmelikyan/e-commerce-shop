import { collection, doc, getDocs, query, where } from 'firebase/firestore'
import { db } from './config'

import { DocumentReference } from '@firebase/firestore'

interface Department {
  id: string
  name: string
  imageUrl: string
}

// Gets all Departments from firestore database.
const getAllDepartments = async () => {
  const docs = await getDocs(collection(db, 'departments'))
  const departments: Department[] = []
  docs.forEach((doc) => {
    departments.push({ name: doc.data().name, id: doc.id, imageUrl: doc.data().imageUrl })
  })
  return departments
}

// Gets all categories that have their subDepartmentId field set to provided subdepartment reference.
const getCategoriesBySubdepartment = async (subdepartmentRef: DocumentReference) => {
  const q = query(collection(db, 'categories'), where('subDepartmentId', '==', subdepartmentRef))
  const categoriesSnap = await getDocs(q)
  const categories: Category[] = []
  categoriesSnap.forEach((doc) =>
    categories.push({
      id: doc.id,
      name: doc.data().name,
      imageUrl: doc.data().imageUrl,
      subDepartmentId: doc.data().subDepartmentId,
    }),
  )
  return categories
}

interface Category {
  id: string
  name: string
  imageUrl: string
  subDepartmentId: DocumentReference
}

interface Subdepartment {
  id: string
  name: string
  categories: Category[]
}

// Gets all subdepartments that have their departmentId field set to the reference generated by provided departmentId string.
const getSubdepartmentsWithCategoriesByDepartment = async (
  departmentId: string,
  setState: React.Dispatch<React.SetStateAction<Subdepartment[]>>,
) => {
  const departmentRef = doc(db, 'departments', departmentId)
  const q = query(collection(db, 'subdepartments'), where('departmentId', '==', departmentRef))
  const subdepartmentsSnap = await getDocs(q)
  subdepartmentsSnap.forEach(async (doc) => {
    const categories = await getCategoriesBySubdepartment(doc.ref)
    setState((prev) => [...prev, { id: doc.id, name: doc.data().name, categories }])
  })
}

export { getAllDepartments, getSubdepartmentsWithCategoriesByDepartment }
